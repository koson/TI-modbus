//*************************************************************
//* i.MX RT1052 initialization file (running code from SDRAM) *
//*************************************************************

FUNC void clockInit(void)
{
   _WDWORD(0x400FC068, 0xFFFFFFFF);
   _WDWORD(0x400FC06C, 0xFFFFFFFF);
   _WDWORD(0x400FC070, 0xFFFFFFFF);
   _WDWORD(0x400FC074, 0xFFFFFFFF);
   _WDWORD(0x400FC078, 0xFFFFFFFF);
   _WDWORD(0x400FC07C, 0xFFFFFFFF);
   _WDWORD(0x400FC080, 0xFFFFFFFF);
   
   _WDWORD(0x400D8030, 0x00002001); 
   _WDWORD(0x400D8100, 0x001D0000);
   _WDWORD(0x400FC014, 0x00010D40);
}

FUNC void sdramWait(void)
{
   unsigned long reg;
   
   do
   {
      reg = _RDWORD(0x402F003C);
   }while((reg & 0x03) == 0);
}

FUNC void sdramInit(void)
{
   _WDWORD(0x401F8014, 0x00000000);
   _WDWORD(0x401F8018, 0x00000000);
   _WDWORD(0x401F801C, 0x00000000);
   _WDWORD(0x401F8020, 0x00000000);
   _WDWORD(0x401F8024, 0x00000000);
   _WDWORD(0x401F8028, 0x00000000);
   _WDWORD(0x401F802C, 0x00000000);
   _WDWORD(0x401F8030, 0x00000000);
   _WDWORD(0x401F8034, 0x00000000);
   _WDWORD(0x401F8038, 0x00000000);
   _WDWORD(0x401F803C, 0x00000000);
   _WDWORD(0x401F8040, 0x00000000);
   _WDWORD(0x401F8044, 0x00000000);
   _WDWORD(0x401F8048, 0x00000000);
   _WDWORD(0x401F804C, 0x00000000);
   _WDWORD(0x401F8050, 0x00000000);
   _WDWORD(0x401F8054, 0x00000000);
   _WDWORD(0x401F8058, 0x00000000);
   _WDWORD(0x401F805C, 0x00000000);
   _WDWORD(0x401F8060, 0x00000000);
   _WDWORD(0x401F8064, 0x00000000);
   _WDWORD(0x401F8068, 0x00000000);
   _WDWORD(0x401F806C, 0x00000000);
   _WDWORD(0x401F8070, 0x00000000);
   _WDWORD(0x401F8074, 0x00000000);
   _WDWORD(0x401F8078, 0x00000000);
   _WDWORD(0x401F807C, 0x00000000);
   _WDWORD(0x401F8080, 0x00000000);
   _WDWORD(0x401F8084, 0x00000000);
   _WDWORD(0x401F8088, 0x00000000);
   _WDWORD(0x401F808C, 0x00000000);
   _WDWORD(0x401F8090, 0x00000000);
   _WDWORD(0x401F8094, 0x00000000);
   _WDWORD(0x401F8098, 0x00000000);
   _WDWORD(0x401F809C, 0x00000000);
   _WDWORD(0x401F80A0, 0x00000000);
   _WDWORD(0x401F80A4, 0x00000000);
   _WDWORD(0x401F80A8, 0x00000000);
   _WDWORD(0x401F80AC, 0x00000000);
   _WDWORD(0x401F80B0, 0x00000010);
   _WDWORD(0x401F80B4, 0x00000000);
   _WDWORD(0x401F80B8, 0x00000000);
   
   _WDWORD(0x401F8204, 0x000110F9);
   _WDWORD(0x401F8208, 0x000110F9);
   _WDWORD(0x401F820C, 0x000110F9);
   _WDWORD(0x401F8210, 0x000110F9);
   _WDWORD(0x401F8214, 0x000110F9);
   _WDWORD(0x401F8218, 0x000110F9);
   _WDWORD(0x401F821C, 0x000110F9);
   _WDWORD(0x401F8220, 0x000110F9);
   _WDWORD(0x401F8224, 0x000110F9);
   _WDWORD(0x401F8228, 0x000110F9);
   _WDWORD(0x401F822C, 0x000110F9);
   _WDWORD(0x401F8230, 0x000110F9);
   _WDWORD(0x401F8234, 0x000110F9);
   _WDWORD(0x401F8238, 0x000110F9);
   _WDWORD(0x401F823C, 0x000110F9);
   _WDWORD(0x401F8240, 0x000110F9);
   _WDWORD(0x401F8244, 0x000110F9);
   _WDWORD(0x401F8248, 0x000110F9);
   _WDWORD(0x401F824C, 0x000110F9);
   _WDWORD(0x401F8250, 0x000110F9);
   _WDWORD(0x401F8254, 0x000110F9);
   _WDWORD(0x401F8258, 0x000110F9);
   _WDWORD(0x401F825C, 0x000110F9);
   _WDWORD(0x401F8260, 0x000110F9);
   _WDWORD(0x401F8264, 0x000110F9);
   _WDWORD(0x401F8268, 0x000110F9);
   _WDWORD(0x401F826C, 0x000110F9);
   _WDWORD(0x401F8270, 0x000110F9);
   _WDWORD(0x401F8274, 0x000110F9);
   _WDWORD(0x401F8278, 0x000110F9);
   _WDWORD(0x401F827C, 0x000110F9);
   _WDWORD(0x401F8280, 0x000110F9);
   _WDWORD(0x401F8284, 0x000110F9);
   _WDWORD(0x401F8288, 0x000110F9);
   _WDWORD(0x401F828C, 0x000110F9);
   _WDWORD(0x401F8290, 0x000110F9);
   _WDWORD(0x401F8294, 0x000110F9);
   _WDWORD(0x401F8298, 0x000110F9);
   _WDWORD(0x401F829C, 0x000110F9);
   _WDWORD(0x401F82A0, 0x000110F9);
   _WDWORD(0x401F82A4, 0x000110F9);
   _WDWORD(0x401F82A8, 0x000110F9);
   
   _WDWORD(0x402F0000, 0x10000004);
   _WDWORD(0x402F0008, 0x00030524);
   _WDWORD(0x402F000C, 0x06030524);
   _WDWORD(0x402F0010, 0x8000001B);
   _WDWORD(0x402F0014, 0x8200001B);
   _WDWORD(0x402F0018, 0x8400001B);
   _WDWORD(0x402F001C, 0x8600001B);
   _WDWORD(0x402F0020, 0x90000021);
   _WDWORD(0x402F0024, 0xA0000019);
   _WDWORD(0x402F0028, 0xA8000017);
   _WDWORD(0x402F002C, 0xA900001B);
   _WDWORD(0x402F0030, 0x00000021);
   _WDWORD(0x402F0004, 0x000079A8);
   
   _WDWORD(0x402F0040, 0x00000F31);
   _WDWORD(0x402F0044, 0x00652922);
   _WDWORD(0x402F0048, 0x00010920);
   _WDWORD(0x402F004C, 0x50210A08);
   
   _WDWORD(0x402F0080, 0x00000021);
   _WDWORD(0x402F0084, 0x00888888);
   _WDWORD(0x402F0094, 0x00000002);
   _WDWORD(0x402F0098, 0x00000000);
   
   _WDWORD(0x402F0090, 0x80000000);
   _WDWORD(0x402F009C, 0xA55A000F);
   sdramWait();
   
   _WDWORD(0x402F0090, 0x80000000);
   _WDWORD(0x402F009C, 0xA55A000C);
   sdramWait();
   
   _WDWORD(0x402F0090, 0x80000000);
   _WDWORD(0x402F009C, 0xA55A000C);
   sdramWait();
   
   _WDWORD(0x402F00A0, 0x00000033);
   _WDWORD(0x402F0090, 0x80000000);
   _WDWORD(0x402F009C, 0xA55A000A);
   sdramWait();
   
   _WDWORD(0x402F004C,0x50210A09);
}

//Initialize clocks
clockInit();
//Initialize SDRAM
sdramInit();

//Load object file
LOAD %L INCREMENTAL

//Setup Vector Table Offset Register
_WDWORD(0xE000ED08, 0x80000000);

//Setup stack pointer
SP = _RDWORD(0x80000000);

//Setup program counter
PC = _RDWORD(0x80000004);

//Run to main
G ,main
